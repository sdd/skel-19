$button-radius: 4px;
$button-box-shadow: 0 1px 3px 0 rgba(28, 45, 157, 0.28);
$button-active-box-shadow: 0 1px 3px 0 rgba(28, 45, 157, 0.35);
$button-font-weight: normal;
$button-border-width: 1;
$button-focus-box-shadow: none;
$button-disabled-opacity: 1;


.c-button {
    display: inline-block;
    font-weight: $button-font-weight;
    text-align: center;
    white-space: nowrap;
    vertical-align: middle;
    user-select: none;

    // TODO: color?
    border: $button-border-width solid transparent;
    border-radius: $button-radius;
    box-shadow: $button-box-shadow;

    &:focus,
    &.has-focus {
        outline: 0;
        box-shadow: $button-focus-box-shadow;
    }

    // Disabled comes first so active can properly restyle
    &.is-disabled,
    &:disabled {
        opacity: $button-disabled-opacity;
        //@include box-shadow(none);
    }

    // Opinionated: add "hand" cursor to non-disabled .c-button elements
    &:not(:disabled):not(.disabled) {
        cursor: pointer;
    }

    &:not(:disabled):not(.disabled):active,
    &:not(:disabled):not(.disabled).is-active {
        background-image: none;
        //@include box-shadow($button-active-box-shadow);

        &:focus {
            //@include box-shadow($button-focus-box-shadow, $button-active-box-shadow);
        }
    }
}

// Future-proof disabling of clicks on `<a>` elements
a.c-button.is-disabled,
fieldset:disabled a.c-button {
    pointer-events: none;
}

//
// Alternate buttons
//

@each $color, $value in $theme-colors {
    .c-button--#{$color} {
        @include button-variant($value, $value);
    }
}

@each $color, $value in $theme-colors {
    .c-button---#{$color} {
        @include button-outline-variant($value);
    }
}

//
// Button Sizes
//

.c-button--lg {
    @include button-size($button-padding-y-lg, $button-padding-x-lg, $font-size-lg, $button-line-height-lg, $button-border-radius-lg);
}

.c-button--sm {
    @include button-size($button-padding-y-sm, $button-padding-x-sm, $font-size-sm, $button-line-height-sm, $button-border-radius-sm);
}


//
// Block button
//

.c-button-block {
    display: block;
    width: 100%;

    // Vertically space out multiple block buttons
    + .c-button-block {
        margin-top: $button-block-spacing-y;
    }
}

// Specificity overrides
input[type="submit"],
input[type="reset"],
input[type="button"] {
    &.c-button-block {
        width: 100%;
    }
}


//
// Link buttons
//

// Make a button look and behave like a link
.c-button-link {
    font-weight: $font-weight-normal;
    color: $link-color;
    background-color: transparent;

    @include hover {
        color: $link-hover-color;
        text-decoration: $link-hover-decoration;
        background-color: transparent;
        border-color: transparent;
    }

    &:focus,
    &.has-focus {
        text-decoration: $link-hover-decoration;
        border-color: transparent;
        box-shadow: none;
    }

    &:disabled,
    &.is-disabled {
        color: $button-link-disabled-color;
        pointer-events: none;
    }
}
